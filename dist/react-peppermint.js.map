{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\symbols.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\info\\viewModelClassInfo.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\info\\viewModelInstanceInfo.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\info\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\action.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\activate.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\broadcast.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\deactivate.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\viewModel.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\internalContext.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\vmResolver.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\Provider.tsx","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\withViewModel.tsx","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\index.ts","external \"react\""],"names":[],"mappings":"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","file":"react-peppermint.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-peppermint\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-peppermint\"] = factory();\n\telse\n\t\troot[\"react-peppermint\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nexport function isSymbol(obj: any): obj is symbol {\r\n    return typeof obj === 'symbol' || obj instanceof Symbol;\r\n}\r\n\r\nexport function setSymbol<T>(obj: any, symbol: symbol, value: T): T {\r\n    return obj[symbol] = value;\r\n}\r\n\r\nexport function getSymbol(obj: any, symbol: symbol): any {\r\n    return obj[symbol];\r\n}\r\n\r\nexport function getOwnSymbol(obj: any, symbol: symbol): any {\r\n    return Object.getOwnPropertySymbols(obj).includes(symbol) && getSymbol(obj, symbol);\r\n}\r\n\r\n/**\r\n * Stored on view-model instances.\r\n */\r\nexport const VIEW_MODEL_INSTANCE_INFO = Symbol('REACT-VIEW-MODEL.INSTANCE_INFO');\r\n/**\r\n * Stored on view-model class constructors.\r\n */\r\nexport const VIEW_MODEL_CLASS_INFO = Symbol('REACT-VIEW-MODEL.CLASS_INFO');\r\n","import { isSymbol } from './symbols';\r\nimport { Constructor, IMap, Method } from './types';\r\n\r\nexport enum DescriptorType {\r\n    None = \"None\",\r\n    Field = \"Field\",\r\n    /** \r\n     * Properties with getter.\r\n     */\r\n    Property = \"Property\",\r\n    Method = \"Method\"\r\n}\r\n\r\n/**\r\n * Define properties of 'source' in 'target'.\r\n * @param target \r\n * @param source \r\n * @param descriptorTypes By default all properties (fields, properties, methods) are defined. \r\n * If specified will define only the specified property types.\r\n */\r\nexport function defineProperties(target: object, source: object, descriptorTypes?: DescriptorType[]): object {\r\n    const descriptors = getAllPropertyDescriptors(source, descriptorTypes);\r\n    for (const key of Object.keys(descriptors)) {\r\n        Object.defineProperty(target, key, descriptors[key]);\r\n    }\r\n    return target;\r\n}\r\n\r\n/**\r\n * Get own and inherited property descriptor (except those of Object).\r\n */\r\nexport function getAllPropertyDescriptors(obj: any, descriptorTypes?: DescriptorType[]): IMap<PropertyDescriptor> {\r\n    let result: IMap<PropertyDescriptor> = {};\r\n\r\n    while (obj.constructor !== Object) {\r\n\r\n        // get descriptor of current type\r\n        let descriptors: IMap<PropertyDescriptor> = Object.getOwnPropertyDescriptors(obj);\r\n\r\n        // filter by descriptor type\r\n        if (descriptorTypes && descriptorTypes.length) {\r\n            const filteredDescriptors: IMap<PropertyDescriptor> = {};\r\n\r\n            for (const key of Object.keys(descriptors)) {\r\n                for (const flag of descriptorTypes) {\r\n                    let shouldAdd = false;\r\n                    switch (flag) {\r\n                        case DescriptorType.None:\r\n                            break;\r\n                        case DescriptorType.Field:\r\n                            shouldAdd = (typeof descriptors[key].value !== 'function' && typeof descriptors[key].get !== 'function');\r\n                            break;\r\n                        case DescriptorType.Property:\r\n                            shouldAdd = (typeof descriptors[key].get === 'function');\r\n                            break;\r\n                        case DescriptorType.Method:\r\n                            shouldAdd = (typeof descriptors[key].value === 'function' && typeof descriptors[key].get !== 'function');\r\n                            break;\r\n                        default:\r\n                            throw new Error(\"Property flag not supported: \" + flag);\r\n                    }\r\n\r\n                    if (shouldAdd)\r\n                        filteredDescriptors[key] = descriptors[key];\r\n                }\r\n            }\r\n\r\n            descriptors = filteredDescriptors;\r\n        }\r\n\r\n        // store in result\r\n        result = Object.assign(descriptors, result);\r\n\r\n        // repeat with prototype\r\n        obj = getPrototype(obj);\r\n    }\r\n\r\n    // a \"constructor\" property is always retrieved as part of the result\r\n    if (result.constructor)\r\n        delete result.constructor;\r\n\r\n    return result;\r\n}\r\n\r\nexport function getConstructorProp(obj: object, key: symbol | string): any {\r\n    if (!obj || !obj.constructor)\r\n        return undefined;\r\n\r\n    const ctor = (obj.constructor as any);\r\n    return ctor[key];\r\n}\r\n\r\nexport function getConstructorOwnProp(obj: object, key: symbol | string): any {\r\n    if (!obj || !obj.constructor)\r\n        return undefined;\r\n\r\n    const ctor = (obj.constructor as any);\r\n    if (isSymbol(key) && Object.getOwnPropertySymbols(ctor).includes(key)) {\r\n        return ctor[key];\r\n    } else if (typeof key === 'string' && Object.getOwnPropertyNames(ctor).includes(key)) {\r\n        return ctor[key];\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * @param obj \r\n * @param bind Whether or not to bind the returned methods to 'obj'. Default value: false.\r\n */\r\nexport function getMethods(obj: object | Constructor<any>, bind = false): IMap<Method> {\r\n    const methodDescriptors = getAllPropertyDescriptors(obj, [DescriptorType.Method]);\r\n    const methods: IMap<Method> = {};\r\n    for (const key of Object.keys(methodDescriptors)) {\r\n        methods[key] = methodDescriptors[key].value;\r\n        if (bind) {\r\n            methods[key] = methods[key].bind(obj);\r\n        }\r\n    }\r\n    return methods;\r\n}\r\n\r\nexport function getPrototype(obj: object | Constructor<any>): object {\r\n    if (typeof obj === 'object') {\r\n        return Object.getPrototypeOf(obj);\r\n    } else if (typeof obj === 'function') {\r\n        return obj.prototype;\r\n    } else {\r\n        throw new Error(\"Expected an object or a function. Got: \" + obj);\r\n    }\r\n}","import { getOwnSymbol, getSymbol, setSymbol, VIEW_MODEL_CLASS_INFO } from '../symbols';\r\nimport { Constructor, IMap } from '../types';\r\nimport { getConstructorOwnProp, getConstructorProp } from '../utils';\r\n\r\n/**\r\n * Metadata information stored on view-model classes templates.\r\n * Since it is common to all instances it is stored on the class constructor.\r\n */\r\nexport class ViewModelClassInfo {\r\n\r\n    //\r\n    // public static\r\n    //\r\n\r\n    public static getInfo(obj: object | Constructor<any>): ViewModelClassInfo {\r\n        if (!obj)\r\n            return undefined;\r\n\r\n        let ownInfo = ViewModelClassInfo.getOwnInfo(obj);\r\n        if (ownInfo)\r\n            return ownInfo;\r\n\r\n        // if base class is a view-model class so should this class be\r\n        const baseInfo = ViewModelClassInfo.getBaseInfo(obj);\r\n        if (baseInfo)\r\n            return ViewModelClassInfo.initInfo(obj);\r\n\r\n        return undefined;\r\n    }\r\n\r\n    public static getOrInitInfo(obj: object | Constructor<any>): ViewModelClassInfo {\r\n\r\n        // get existing info\r\n        const info = ViewModelClassInfo.getInfo(obj);\r\n        if (info)\r\n            return info;\r\n\r\n        // create if not exists\r\n        return ViewModelClassInfo.initInfo(obj);\r\n    }\r\n\r\n    //\r\n    // private static\r\n    //\r\n\r\n    private static getOwnInfo(obj: object | Constructor<any>): ViewModelClassInfo {\r\n        if (typeof obj === 'object') {\r\n            return getConstructorOwnProp(obj, VIEW_MODEL_CLASS_INFO);\r\n        } else {\r\n            return getOwnSymbol(obj, VIEW_MODEL_CLASS_INFO);\r\n        }\r\n    }\r\n\r\n    private static getBaseInfo(obj: object | Constructor<any>): ViewModelClassInfo {\r\n        if (typeof obj === 'object') {\r\n            return getConstructorProp(obj, VIEW_MODEL_CLASS_INFO);\r\n        } else {\r\n            return getSymbol(obj, VIEW_MODEL_CLASS_INFO);\r\n        }\r\n    }\r\n\r\n    private static initInfo(obj: object | Constructor<any>): ViewModelClassInfo {\r\n        // information is stored on the class constructor to \r\n        // be available to all class instances\r\n        const isConstructor = (typeof obj === 'function' ? true : false);\r\n        const target = (isConstructor ? obj : obj.constructor);\r\n\r\n        // derive initial info from base class, if any\r\n        const baseInfo = getSymbol(target, VIEW_MODEL_CLASS_INFO);\r\n\r\n        // set own info\r\n        const selfInfo = Object.assign(new ViewModelClassInfo(), baseInfo);\r\n        return setSymbol(target, VIEW_MODEL_CLASS_INFO, selfInfo);\r\n    }\r\n\r\n    //\r\n    // instance members\r\n    //\r\n\r\n    public activate: string | symbol;\r\n    public deactivate: string | symbol;\r\n    public refresh: IMap<boolean> = {};\r\n    public refreshAll: IMap<boolean> = {};\r\n}","import { getSymbol, setSymbol, VIEW_MODEL_INSTANCE_INFO } from '../symbols';\r\nimport { RefreshCallback } from '../types';\r\n\r\n/**\r\n * Metadata stored on every view-model instance.\r\n */\r\nexport class ViewModelInstanceInfo {\r\n\r\n    public static getInfo(vm: any): ViewModelInstanceInfo {\r\n        if (!vm)\r\n            return undefined;\r\n\r\n        return getSymbol(vm, VIEW_MODEL_INSTANCE_INFO);\r\n    }\r\n\r\n    public static initInfo(vm: any): ViewModelInstanceInfo {\r\n        const info = new ViewModelInstanceInfo();\r\n        return setSymbol(vm, VIEW_MODEL_INSTANCE_INFO, info);\r\n    }\r\n\r\n    /**\r\n     * Store view instances of this view-model and their refresh callback.\r\n     */\r\n    public readonly refreshView = new Map<any, RefreshCallback>();\r\n    public activate: string | symbol;\r\n    public deactivate: string | symbol;\r\n}","export * from './viewModelClassInfo';\nexport * from './viewModelInstanceInfo';\n","import { ViewModelClassInfo } from \"../info\";\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method as a view refresher.\r\n */\r\nexport function action(target: object, propertyKey: string | symbol): void {\r\n    const info = ViewModelClassInfo.getOrInitInfo(target);\r\n    info.refresh[propertyKey as any] = true;\r\n}","import { ViewModelClassInfo } from \"../info\";\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method to be run on componentDidMount.\r\n */\r\nexport function activate(target: object, propertyKey: string | symbol): void {\r\n    const info = ViewModelClassInfo.getOrInitInfo(target);\r\n    info.activate = propertyKey;\r\n}","import { ViewModelClassInfo } from \"../info\";\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method as an all-view refresher.\r\n */\r\nexport function broadcast(target: object, propertyKey: string | symbol): void {\r\n    const info = ViewModelClassInfo.getOrInitInfo(target);\r\n    info.refreshAll[propertyKey as any] = true;\r\n}","import { ViewModelClassInfo } from \"../info\";\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method to be run on componentWillUnmount.\r\n */\r\nexport function deactivate(target: object, propertyKey: string | symbol): void {\r\n    const info = ViewModelClassInfo.getOrInitInfo(target);\r\n    info.deactivate = propertyKey;\r\n}","import { ViewModelClassInfo } from \"../info\";\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Class decorator.\r\n * \r\n * Mark this class as a view-model class.\r\n */\r\nexport function viewModel(ctor: Function): any {\r\n    ViewModelClassInfo.getOrInitInfo(ctor);\r\n}","export * from './action';\r\nexport * from './activate';\r\nexport * from './broadcast';\r\nexport * from './deactivate';\r\nexport * from './viewModel';\r\n","import * as React from 'react';\r\nimport { IResolver } from '../types';\r\n\r\n//\r\n// This is the internal React context provider. The provider that is exposed to\r\n// the end user is in a separate file.\r\n//\r\n\r\nexport interface InternalContext {\r\n    resolver: IResolver;\r\n}\r\n\r\nconst { Provider, Consumer } = React.createContext<InternalContext>(undefined);\r\n\r\nexport { Provider as InternalProvider, Consumer as InternalConsumer };","import { ViewModelClassInfo, ViewModelInstanceInfo } from '../info';\r\nimport { IResolver, Method, RefreshCallback, ResolverKey } from '../types';\r\nimport { defineProperties, DescriptorType, getMethods } from '../utils';\r\n\r\nexport class VmResolver implements IResolver {\r\n\r\n    public readonly internalResolver: IResolver;\r\n    private readonly refreshAll: RefreshCallback;\r\n\r\n    constructor(internalContainer: IResolver, refreshAll: RefreshCallback) {\r\n        this.internalResolver = internalContainer;\r\n        this.refreshAll = refreshAll;\r\n    }\r\n\r\n    public get<T>(key: ResolverKey<T>): T {\r\n        const instance = this.internalResolver.get(key);\r\n\r\n        const vmInfo = ViewModelClassInfo.getInfo(instance as any);\r\n        if (vmInfo) {\r\n            this.patchViewModel(instance, vmInfo);\r\n        }\r\n\r\n        return instance;\r\n    }\r\n\r\n    private patchViewModel(vm: any, vmClassInfo: ViewModelClassInfo) {\r\n        const self = this;  // tslint:disable-line:no-this-assignment\r\n\r\n        // set vm symbols\r\n        const vmInstanceInfo = ViewModelInstanceInfo.initInfo(vm);\r\n        vmInstanceInfo.activate = vmClassInfo.activate;\r\n        vmInstanceInfo.deactivate = vmClassInfo.deactivate;\r\n\r\n        //\r\n        // define methods and properties directly on the vm instance (they\r\n        // currently exist on it's prototype) this way they will also be copied\r\n        // to withViewModel wrapped component (the copy operation happens inside\r\n        // it's render method)\r\n        //\r\n\r\n        // define properties \"as is\"\r\n        defineProperties(vm, vm, [DescriptorType.Property]);\r\n\r\n        // patch and define methods\r\n        const vmMethods = getMethods(vm);\r\n        for (const methodName of Object.keys(vmMethods)) {\r\n            this.patchMethod(self, vm, vmClassInfo, vmInstanceInfo, methodName);\r\n        }\r\n    }\r\n\r\n    private patchMethod(\r\n        resolver: VmResolver,\r\n        vm: any,\r\n        vmClassInfo: ViewModelClassInfo,\r\n        vmInstanceInfo: ViewModelInstanceInfo,\r\n        methodName: string\r\n    ) {\r\n\r\n        const originalMethod: Method = vm[methodName];\r\n        const isAction = vmClassInfo.refresh[methodName];\r\n        const isBroadcast = vmClassInfo.refreshAll[methodName];\r\n\r\n        let finalMethod: Method;\r\n        if (isAction || isBroadcast) {\r\n\r\n            // patch actions\r\n            const freshWrapper = function (this: any) {\r\n                \r\n                // measure time\r\n                let start: number;\r\n                if (process.env.NODE_ENV === 'development') {\r\n                    start = Date.now();\r\n                }\r\n\r\n                // call the original method\r\n                const result = originalMethod.apply(this, arguments);\r\n\r\n                // refresh views\r\n                if (isAction) {\r\n                    vmInstanceInfo.refreshView.forEach(refresh => refresh());\r\n                } else if (isBroadcast) {\r\n                    resolver.refreshAll();\r\n                }\r\n\r\n                // log\r\n                if (process.env.NODE_ENV === 'development') {\r\n                    const totalTime = Date.now() - start;\r\n                    console.log(`[${vm.constructor.name}] ${methodName} (in ${totalTime}ms)`);\r\n                }\r\n\r\n                // return original result\r\n                return result;\r\n            };\r\n\r\n            finalMethod = freshWrapper;\r\n        } else {\r\n\r\n            // keep other methods untouched\r\n            finalMethod = originalMethod;\r\n        }\r\n\r\n        // bind vm methods to itself\r\n        vm[methodName] = finalMethod.bind(vm);\r\n    }\r\n}","import * as React from 'react';\r\nimport { IResolver } from '../types';\r\nimport { InternalProvider } from './internalContext';\r\nimport { VmResolver } from './vmResolver';\r\n\r\n//\r\n// Here we wrap the actual React context provider with our own Provider class so\r\n// that we could execute custom logic during 'render' calls.\r\n//\r\n\r\nexport interface ProviderProps {\r\n    resolver: IResolver;\r\n}\r\n\r\nexport class Provider extends React.PureComponent<ProviderProps> {\r\n\r\n    private vmResolver: VmResolver;\r\n\r\n    public render() {\r\n        this.setContainer();\r\n        return (\r\n            <InternalProvider value={{ resolver: this.vmResolver }}>\r\n                {this.props.children}\r\n            </InternalProvider>\r\n        );\r\n    }\r\n\r\n    private setContainer() {\r\n\r\n        // can't set container\r\n        if (!this.props.resolver)\r\n            return;\r\n\r\n        // container already exists\r\n        if (this.vmResolver && this.vmResolver.internalResolver === this.props.resolver) {\r\n            return;\r\n        }\r\n\r\n        // create (or update) container\r\n        this.vmResolver = new VmResolver(this.props.resolver, this.forceUpdate.bind(this));\r\n    }\r\n}","import * as React from 'react';\r\nimport { ViewModelInstanceInfo } from '../info';\r\nimport { IResolver, ResolverKey } from '../types';\r\nimport { InternalConsumer } from './internalContext';\r\n\r\n// tslint:disable:variable-name\r\n\r\nexport const withViewModel = (VmClass: ResolverKey<any>) => (Component: React.ComponentType) => {\r\n\r\n    return class ComponentWithViewModel extends React.PureComponent {\r\n\r\n        private vm: any;\r\n\r\n        public componentDidMount() {\r\n\r\n            // invoke activate life cycle method\r\n            const vmInfo = ViewModelInstanceInfo.getInfo(this.vm);\r\n            const activateKey = vmInfo.activate;\r\n            if (activateKey) {\r\n                const activateMethod = this.vm[activateKey];\r\n                if (typeof activateMethod === 'function') {\r\n\r\n                    // log\r\n                    if (process.env.NODE_ENV === 'development') {\r\n                        console.log(`[${this.vm.constructor.name}] activate`);\r\n                    }\r\n\r\n                    // invoke\r\n                    activateMethod();\r\n                }\r\n            }\r\n        }\r\n\r\n        public render() {\r\n            return (\r\n                <InternalConsumer>\r\n                    {context => {\r\n\r\n                        if (!context)\r\n                            throw new Error('Context not found. Make sure you use the Provider component.');\r\n                        if (!context.resolver)\r\n                            throw new Error('Resolver not found. Make sure you use the Provider component.');\r\n                            \r\n                        this.setVm(context.resolver);\r\n                        const componentProps = Object.assign({}, this.vm, this.props);\r\n                        return <Component {...componentProps} />;\r\n                    }}\r\n                </InternalConsumer>\r\n            );\r\n        }\r\n\r\n        public componentWillUnmount() {\r\n            \r\n            // remove registration\r\n            const vmInfo = ViewModelInstanceInfo.getInfo(this.vm);\r\n            vmInfo.refreshView.delete(this);\r\n\r\n            // invoke deactivate life cycle method\r\n            const deactivateKey = vmInfo.deactivate;\r\n            if (deactivateKey) {\r\n                const deactivateMethod = this.vm[deactivateKey];\r\n                if (typeof deactivateMethod === 'function') {\r\n\r\n                    // log\r\n                    if (process.env.NODE_ENV === 'development') {\r\n                        console.log(`[${this.vm.constructor.name}] deactivate`);\r\n                    }\r\n\r\n                    // invoke\r\n                    deactivateMethod();\r\n                }\r\n            }\r\n        }\r\n\r\n        private setVm(resolver: IResolver) {\r\n            if (this.vm)\r\n                return;\r\n\r\n            // resolve vm instance\r\n            this.vm = resolver.get(VmClass);\r\n\r\n            // register for updates\r\n            const vmInfo = ViewModelInstanceInfo.getInfo(this.vm);\r\n            if (!vmInfo) {\r\n                throw new Error(`Class ${this.vm.constructor.name} is used as a view-model but no decorator was used.`);\r\n            }\r\n\r\n            vmInfo.refreshView.set(this, this.forceUpdate.bind(this));\r\n        }\r\n    };\r\n};","export * from './Provider';\nexport * from './withViewModel';\n","export * from './decorators';\nexport * from './core';\nexport * from './types';\n","module.exports = require(\"react\");"],"sourceRoot":""}