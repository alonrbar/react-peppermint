{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\symbols.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\vmClassInfo.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\options.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\createActionDecorator.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\action.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\activate.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\broadcast.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\deactivate.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\viewModel.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\decorators\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\internalContext.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\types.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\viewRefresher.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\vmContext.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\vmResolver.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\Provider.tsx","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\withViewModel.tsx","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\core\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-peppermint\\src\\index.ts","external \"react\""],"names":[],"mappings":"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","file":"react-peppermint.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-peppermint\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-peppermint\"] = factory();\n\telse\n\t\troot[\"react-peppermint\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nexport function isSymbol(obj: any): obj is symbol {\r\n    return typeof obj === 'symbol' || obj instanceof Symbol;\r\n}\r\n\r\nexport function setSymbol<T>(obj: any, symbol: symbol, value: T): T {\r\n    return obj[symbol] = value;\r\n}\r\n\r\nexport function getSymbol(obj: any, symbol: symbol): any {\r\n    return obj[symbol];\r\n}\r\n\r\nexport function getOwnSymbol(obj: any, symbol: symbol): any {\r\n    return Object.getOwnPropertySymbols(obj).includes(symbol) && getSymbol(obj, symbol);\r\n}\r\n\r\n/**\r\n * Stored on view-model instances.\r\n */\r\nexport const VM_CONTEXT = Symbol('REACT-PEPPERMINT.VM_CONTEXT');\r\n/**\r\n * Stored on view-model class constructors.\r\n */\r\nexport const VM_CLASS_INFO = Symbol('REACT-PEPPERMINT.VM_CLASS_INFO');\r\n","import { isSymbol } from './symbols';\r\nimport { Constructor, Func, IMap, Method } from './types';\r\n\r\nexport enum DescriptorType {\r\n    None = \"None\",\r\n    Field = \"Field\",\r\n    /** \r\n     * Properties with getter.\r\n     */\r\n    Property = \"Property\",\r\n    Method = \"Method\"\r\n}\r\n\r\n/**\r\n * When using `Object.assign` TypeScript assigns property values (invoking\r\n * getters) but Babel does not. Using this method we can be sure that properties\r\n * are also copied to the target object.\r\n */\r\nexport function assignWithProperties(target: object, ...sources: object[]): object {\r\n\r\n    // assign fields     \r\n    target = Object.assign(target, ...sources);\r\n\r\n    // add all properties\r\n    for (const source of sources) {\r\n        const proto = Object.getPrototypeOf(source);\r\n        for (const key of Object.getOwnPropertyNames(proto)) {\r\n            const desc = Object.getOwnPropertyDescriptor(proto, key);\r\n            const hasGetter = desc && typeof desc.get === 'function';\r\n            if (hasGetter) {\r\n                (target as any)[key] = desc.get.call(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\n/**\r\n * Define properties of 'source' in 'target'.\r\n * @param target \r\n * @param source \r\n * @param descriptorTypes By default all properties (fields, properties, methods) are defined. \r\n * If specified will define only the specified property types.\r\n */\r\nexport function defineProperties(target: object, source: object, descriptorTypes?: DescriptorType[]): object {\r\n    const descriptors = getAllPropertyDescriptors(source, descriptorTypes);\r\n    for (const key of Object.keys(descriptors)) {\r\n        Object.defineProperty(target, key, descriptors[key]);\r\n    }\r\n    return target;\r\n}\r\n\r\n/**\r\n * Get own and inherited property descriptor (except those of Object).\r\n */\r\nexport function getAllPropertyDescriptors(obj: any, descriptorTypes?: DescriptorType[]): IMap<PropertyDescriptor> {\r\n    let result: IMap<PropertyDescriptor> = {};\r\n\r\n    while (obj.constructor !== Object) {\r\n\r\n        // get descriptor of current type\r\n        let descriptors: IMap<PropertyDescriptor> = Object.getOwnPropertyDescriptors(obj);\r\n\r\n        // filter by descriptor type\r\n        if (descriptorTypes && descriptorTypes.length) {\r\n            const filteredDescriptors: IMap<PropertyDescriptor> = {};\r\n\r\n            for (const key of Object.keys(descriptors)) {\r\n                for (const flag of descriptorTypes) {\r\n                    let shouldAdd = false;\r\n                    switch (flag) {\r\n                        case DescriptorType.None:\r\n                            break;\r\n                        case DescriptorType.Field:\r\n                            shouldAdd = (typeof descriptors[key].value !== 'function' && typeof descriptors[key].get !== 'function');\r\n                            break;\r\n                        case DescriptorType.Property:\r\n                            shouldAdd = (typeof descriptors[key].get === 'function');\r\n                            break;\r\n                        case DescriptorType.Method:\r\n                            shouldAdd = (typeof descriptors[key].value === 'function' && typeof descriptors[key].get !== 'function');\r\n                            break;\r\n                        default:\r\n                            throw new Error(\"Property flag not supported: \" + flag);\r\n                    }\r\n\r\n                    if (shouldAdd)\r\n                        filteredDescriptors[key] = descriptors[key];\r\n                }\r\n            }\r\n\r\n            descriptors = filteredDescriptors;\r\n        }\r\n\r\n        // store in result\r\n        result = Object.assign(descriptors, result);\r\n\r\n        // repeat with prototype\r\n        obj = getPrototype(obj);\r\n    }\r\n\r\n    // a \"constructor\" property is always retrieved as part of the result\r\n    if (result.constructor)\r\n        delete result.constructor;\r\n\r\n    return result;\r\n}\r\n\r\nexport function getConstructorProp(obj: object, key: symbol | string): any {\r\n    if (!obj || !obj.constructor)\r\n        return undefined;\r\n\r\n    const ctor = (obj.constructor as any);\r\n    return ctor[key];\r\n}\r\n\r\nexport function getConstructorOwnProp(obj: object, key: symbol | string): any {\r\n    if (!obj || !obj.constructor)\r\n        return undefined;\r\n\r\n    const ctor = (obj.constructor as any);\r\n    if (isSymbol(key) && Object.getOwnPropertySymbols(ctor).includes(key)) {\r\n        return ctor[key];\r\n    } else if (typeof key === 'string' && Object.getOwnPropertyNames(ctor).includes(key)) {\r\n        return ctor[key];\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * @param obj \r\n * @param bind Whether or not to bind the returned methods to 'obj'. Default value: false.\r\n */\r\nexport function getMethods(obj: object | Constructor<any>, bind = false): IMap<Method> {\r\n    const methodDescriptors = getAllPropertyDescriptors(obj, [DescriptorType.Method]);\r\n    const methods: IMap<Method> = {};\r\n    for (const key of Object.keys(methodDescriptors)) {\r\n        methods[key] = methodDescriptors[key].value;\r\n        if (bind) {\r\n            methods[key] = methods[key].bind(obj);\r\n        }\r\n    }\r\n    return methods;\r\n}\r\n\r\nexport function getPrototype(obj: object | Constructor<any>): object {\r\n    if (typeof obj === 'object') {\r\n        return Object.getPrototypeOf(obj);\r\n    } else if (typeof obj === 'function') {\r\n        return obj.prototype;\r\n    } else {\r\n        throw new Error(\"Expected an object or a function. Got: \" + obj);\r\n    }\r\n}\r\n\r\nexport function isPromise(candidate: any) {\r\n    return (candidate && typeof candidate.then === 'function');\r\n}\r\n\r\n/**\r\n * Removes one element from the array and returns the removed element.\r\n */\r\nexport function removeOneFromArray<T>(array: T[], item: T): T {\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i] === item) {\r\n            return array.splice(i, 1)[0];\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function tryInvoke<TIn, TOut>(func: Func<TIn, TOut>, ...args: TIn[]): TOut {\r\n    if (typeof func === 'function')\r\n        return func(...args);\r\n\r\n    return undefined;\r\n}","import { ActionOptions } from '../options';\r\nimport { getOwnSymbol, getSymbol, setSymbol, VM_CLASS_INFO } from '../symbols';\r\nimport { IMap } from '../types';\r\nimport { getConstructorOwnProp, getConstructorProp } from '../utils';\r\n\r\n/**\r\n * Metadata information stored on view-model classes templates.\r\n * Since it is common to all instances it is stored on the class constructor.\r\n */\r\nexport class VmClassInfo {\r\n\r\n    //\r\n    // public static\r\n    //\r\n\r\n    public static getInfo(obj: any): VmClassInfo {\r\n        if (!obj)\r\n            return undefined;\r\n\r\n        let ownInfo = VmClassInfo.getOwnInfo(obj);\r\n        if (ownInfo)\r\n            return ownInfo;\r\n\r\n        // if base class is a view-model class so should this class be\r\n        const baseInfo = VmClassInfo.getBaseInfo(obj);\r\n        if (baseInfo)\r\n            return VmClassInfo.initInfo(obj);\r\n\r\n        return undefined;\r\n    }\r\n\r\n    public static getOrInitInfo(obj: any): VmClassInfo {\r\n\r\n        // get existing info\r\n        const info = VmClassInfo.getInfo(obj);\r\n        if (info)\r\n            return info;\r\n\r\n        // create if not exists\r\n        return VmClassInfo.initInfo(obj);\r\n    }\r\n\r\n    //\r\n    // private static\r\n    //\r\n\r\n    private static getOwnInfo(obj: any): VmClassInfo {\r\n        if (typeof obj === 'object') {\r\n            return getConstructorOwnProp(obj, VM_CLASS_INFO);\r\n        } else {\r\n            return getOwnSymbol(obj, VM_CLASS_INFO);\r\n        }\r\n    }\r\n\r\n    private static getBaseInfo(obj: any): VmClassInfo {\r\n        if (typeof obj === 'object') {\r\n            return getConstructorProp(obj, VM_CLASS_INFO);\r\n        } else {\r\n            return getSymbol(obj, VM_CLASS_INFO);\r\n        }\r\n    }\r\n\r\n    private static initInfo(obj: any): VmClassInfo {\r\n        // information is stored on the class constructor to \r\n        // be available to all class instances\r\n        const isConstructor = (typeof obj === 'function' ? true : false);\r\n        const target = (isConstructor ? obj : obj.constructor);\r\n\r\n        // derive initial info from base class, if any\r\n        const baseInfo = getSymbol(target, VM_CLASS_INFO);\r\n\r\n        // set own info\r\n        const selfInfo = Object.assign(new VmClassInfo(), baseInfo);\r\n        return setSymbol(target, VM_CLASS_INFO, selfInfo);\r\n    }\r\n\r\n    //\r\n    // instance members\r\n    //\r\n\r\n    public activate: IMap<ActionOptions> = {};\r\n    public deactivate: IMap<ActionOptions> = {};\r\n    public actions: IMap<ActionOptions> = {};\r\n    public broadcasts: IMap<ActionOptions> = {};\r\n}","\r\n// tslint:disable:whitespace\r\n\r\nexport class ActionOptions {\r\n\r\n    /**\r\n     * By default if the method result is a promise the view will be refreshed\r\n     * only after the promise is resolved. Set this flag to `true` to skip the\r\n     * wait for the promise.  \r\n     * Note that this flag also affects the time when the onMethodInvokeEnd event is\r\n     * raised.\r\n     *\r\n     * Default: `false`\r\n     */\r\n    public immediate?= false;\r\n\r\n    constructor(initial?: Partial<ActionOptions>) {\r\n        Object.assign(this, initial);\r\n    }\r\n}","import { VmClassInfo } from \"../core/vmClassInfo\";\r\nimport { ActionOptions } from \"../options\";\r\n\r\nexport interface ActionDecorator {\r\n    (options: ActionOptions): PropertyDecorator;\r\n    (target: object, propertyKey: string | symbol): void;\r\n}\r\n\r\nexport function createActionDecorator(key: keyof VmClassInfo): ActionDecorator {\r\n\r\n    return (targetOrOptions: any, propertyKeyOrNothing?: string | symbol): any => {\r\n        if (propertyKeyOrNothing) {\r\n\r\n            // call with default options\r\n            actionDecorator.call(undefined, targetOrOptions, propertyKeyOrNothing);\r\n        } else {\r\n\r\n            // call with custom options\r\n            return (target: object, propertyKey: string | symbol) => actionDecorator(target, propertyKey, targetOrOptions);\r\n        }\r\n    };\r\n\r\n    function actionDecorator(target: object, propertyKey: string | symbol, options?: ActionOptions): void {\r\n        const info = VmClassInfo.getOrInitInfo(target);\r\n        info[key][propertyKey as any] = new ActionOptions(options);\r\n    }\r\n}","import { createActionDecorator } from './createActionDecorator';\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method as a view refresher.\r\n */\r\nexport const action = createActionDecorator('actions');","import { createActionDecorator } from './createActionDecorator';\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method to be run on componentDidMount.\r\n */\r\nexport const activate = createActionDecorator('activate');","import { createActionDecorator } from './createActionDecorator';\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method as an all-view refresher.\r\n */\r\nexport const broadcast = createActionDecorator('broadcasts');","import { createActionDecorator } from './createActionDecorator';\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method to be run on componentWillUnmount.\r\n */\r\nexport const deactivate = createActionDecorator('deactivate');","import { VmClassInfo } from \"../core/vmClassInfo\";\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Class decorator.\r\n * \r\n * Mark this class as a view-model class.\r\n */\r\nexport function viewModel(ctor: Function): any {\r\n    VmClassInfo.getOrInitInfo(ctor);\r\n}","export * from './action';\r\nexport * from './activate';\r\nexport * from './broadcast';\r\nexport * from './deactivate';\r\nexport * from './viewModel';\r\n\r\n// the rest is internal - don't expose it...","import * as React from 'react';\r\nimport { IResolver } from '../types';\r\n\r\n//\r\n// This is the internal React context provider. The provider that is exposed to\r\n// the end user is in a separate file.\r\n//\r\n\r\nexport interface InternalContext {\r\n    resolver: IResolver;\r\n}\r\n\r\nconst { Provider, Consumer } = React.createContext<InternalContext>(undefined);\r\n\r\nexport { Provider as InternalProvider, Consumer as InternalConsumer };","// tslint:disable:ban-types\r\n\r\nexport declare type ResolverKey<T> = Constructor<T> | string | symbol;\r\n\r\nexport interface IResolver {\r\n    get<T>(key: ResolverKey<T>): T;\r\n}\r\n\r\nexport interface MethodInvokeEvent {\r\n    vm: any;\r\n    methodName: string | symbol;\r\n    methodArgs: IArguments;\r\n    isBroadcast: boolean;\r\n}\r\n\r\nexport function createMethodInvokeArgs(vm: any, methodName: string | symbol, methodArgs: IArguments, isBroadcast: boolean): MethodInvokeEvent {\r\n    return {\r\n        vm,\r\n        methodName,\r\n        methodArgs,\r\n        isBroadcast\r\n    };\r\n}\r\n\r\nexport interface Constructor<T> {\r\n    new(...args: any[]): T;\r\n}\r\n\r\nexport interface IMap<T> {\r\n    [key: string]: T;\r\n}\r\n\r\nexport type Method = Function;\r\n\r\nexport type Func<TIn, TOut> = (...args: TIn[]) => TOut;","import { removeOneFromArray } from '../utils';\r\n\r\nexport class ViewRefresher {\r\n\r\n    private readonly viewsByViewModel = new Map<any, Set<React.Component>>();\r\n    private allViews: React.Component[] = [];\r\n\r\n    constructor(rootComponent: React.Component) {\r\n        this.allViews.push(rootComponent);\r\n    }\r\n\r\n    public registerView(vm: any, view: React.Component): void {\r\n\r\n        // update viewsByViewModel collection\r\n        let components = this.viewsByViewModel.get(vm);\r\n        if (!components) {\r\n            components = new Set();\r\n            this.viewsByViewModel.set(vm, components);\r\n        }\r\n        components.add(view);\r\n\r\n        // update allViews collections\r\n        this.allViews.push(view);\r\n    }\r\n\r\n    public unregisterView(vm: any, view: React.Component): void {\r\n\r\n        // update viewsByViewModel collection\r\n        const components = this.viewsByViewModel.get(vm);\r\n        components.delete(view);\r\n        if (!components.size)\r\n            this.viewsByViewModel.delete(vm);\r\n\r\n        // update allViews collections\r\n        removeOneFromArray(this.allViews, view);\r\n    }\r\n\r\n    public refreshViews(refreshAll: boolean, vm: any): void {\r\n        let views: React.Component[] | Set<React.Component>;\r\n\r\n        if (refreshAll) {\r\n            views = this.allViews.slice();\r\n        } else {\r\n            views = this.viewsByViewModel.get(vm);\r\n        }\r\n\r\n        if (views) {\r\n            (views as React.Component[]).forEach(component => {\r\n                // Note that we're updating the wrapping ComponentWithViewModel\r\n                // component, the actual component may not be updated at all\r\n                // (depending on it's shouldComponentUpdate result). That's why\r\n                // we can use forceUpdate instead of setState and spare the\r\n                // implicit shouldComponentUpdate on the wrapping component.\r\n                component.forceUpdate();\r\n            });\r\n        }\r\n    }\r\n}","import { getSymbol, setSymbol, VM_CONTEXT } from '../symbols';\r\nimport { ViewRefresher } from './viewRefresher';\r\nimport { VmClassInfo } from './vmClassInfo';\r\n\r\nexport class VmContext {\r\n\r\n    public static getContext(vm: any): VmContext {\r\n        if (!vm)\r\n            return undefined;\r\n\r\n        return getSymbol(vm, VM_CONTEXT);\r\n    }\r\n\r\n    public static initContext(vm: any, vmClassInfo: VmClassInfo, viewRefresher: ViewRefresher): VmContext {\r\n        const info = new VmContext(vm, vmClassInfo, viewRefresher);\r\n        return setSymbol(vm, VM_CONTEXT, info);\r\n    }\r\n\r\n    public activate: object = {};\r\n    public deactivate: object = {};\r\n    public readonly registerView: (view: React.Component) => void;\r\n    public readonly unregisterView: (view: React.Component) => void;    \r\n\r\n    constructor(vm: any, vmClassInfo: VmClassInfo, viewRefresher: ViewRefresher) {\r\n        this.activate = vmClassInfo.activate;\r\n        this.deactivate = vmClassInfo.deactivate;\r\n        this.registerView = (view: React.Component) => viewRefresher.registerView(vm, view);\r\n        this.unregisterView = (view: React.Component) => viewRefresher.unregisterView(vm, view);\r\n    }\r\n}","import { createMethodInvokeArgs, IResolver, Method, MethodInvokeEvent, ResolverKey } from '../types';\r\nimport { defineProperties, DescriptorType, getMethods, isPromise, tryInvoke } from '../utils';\r\nimport { ViewRefresher } from './viewRefresher';\r\nimport { VmClassInfo } from './vmClassInfo';\r\nimport { VmContext } from './vmContext';\r\n\r\n/**\r\n * Augments and resolves view-models.\r\n */\r\nexport class VmResolver implements IResolver {\r\n\r\n    public onMethodInvokeStart: (e: MethodInvokeEvent) => void;\r\n    public onMethodInvokeEnd: (e: MethodInvokeEvent) => void;\r\n\r\n    public readonly internalResolver: IResolver;\r\n\r\n    private readonly viewRefresher: ViewRefresher;\r\n\r\n    constructor(internalContainer: IResolver, rootComponent: React.Component) {\r\n        this.internalResolver = internalContainer;\r\n        this.viewRefresher = new ViewRefresher(rootComponent);\r\n    }\r\n\r\n    public get<T>(key: ResolverKey<T>): T {\r\n        const instance = this.internalResolver.get(key);\r\n\r\n        // if it's a vm class\r\n        const vmClassInfo = VmClassInfo.getInfo(instance);\r\n        if (vmClassInfo) {\r\n\r\n            // and the current instance is not already patched\r\n            const vmInstanceInfo = VmContext.getContext(instance);\r\n            if (!vmInstanceInfo) {\r\n\r\n                // patch current vm instance\r\n                this.patchViewModel(instance, vmClassInfo);\r\n            }\r\n        }\r\n\r\n        return instance;\r\n    }\r\n\r\n    private patchViewModel(vm: any, vmClassInfo: VmClassInfo): void {\r\n\r\n        // set vm symbols\r\n        VmContext.initContext(vm, vmClassInfo, this.viewRefresher);\r\n\r\n        //\r\n        // define methods and properties directly on the vm instance (they\r\n        // currently exist on it's prototype) this way they will also be copied\r\n        // to withViewModel wrapped component (the copy operation happens inside\r\n        // it's render method)\r\n        //\r\n\r\n        // define properties \"as is\"\r\n        defineProperties(vm, vm, [DescriptorType.Property]);\r\n\r\n        // patch and define methods\r\n        const vmMethods = getMethods(vm);\r\n        for (const methodName of Object.keys(vmMethods)) {\r\n            this.patchMethod(vm, vmClassInfo, methodName);\r\n        }\r\n    }\r\n\r\n    private patchMethod(vm: any, vmClassInfo: VmClassInfo, methodName: string): void {\r\n\r\n        const self = this;  // tslint:disable-line:no-this-assignment\r\n        const originalMethod: Method = vm[methodName];\r\n        const actionOptions = vmClassInfo.actions[methodName];\r\n        const broadcastOptions = vmClassInfo.broadcasts[methodName];\r\n        const activateOptions = vmClassInfo.activate[methodName];\r\n        const deactivateOptions = vmClassInfo.deactivate[methodName];\r\n        const anyOptions = (actionOptions || broadcastOptions || activateOptions || deactivateOptions);\r\n        const shouldPatch = !!anyOptions;\r\n\r\n        let finalMethod: Method;\r\n        if (shouldPatch) {\r\n\r\n            // patch actions and broadcasts\r\n            finalMethod = function (this: any) {\r\n\r\n                const args = arguments;\r\n                const isBroadcast = !!broadcastOptions;\r\n\r\n                // notify before\r\n                const invokeEventArgs = createMethodInvokeArgs(vm, methodName, args, isBroadcast);\r\n                tryInvoke(self.onMethodInvokeStart, invokeEventArgs);\r\n\r\n                // call the original method\r\n                const result = originalMethod.apply(this, args);\r\n\r\n                const afterOriginalInvoked = (res: any) => {\r\n\r\n                    // refresh view\r\n                    if (!deactivateOptions) {\r\n                        self.viewRefresher.refreshViews(isBroadcast, vm);\r\n                    }\r\n\r\n                    // notify\r\n                    tryInvoke(self.onMethodInvokeEnd, invokeEventArgs);\r\n                    return res;\r\n                };\r\n\r\n                // return\r\n                if (isPromise(result) && !anyOptions.immediate) {\r\n                    return result.then(afterOriginalInvoked);\r\n                } else {\r\n                    return afterOriginalInvoked(result);\r\n                }\r\n            };\r\n\r\n        } else {\r\n\r\n            // keep other methods untouched\r\n            finalMethod = originalMethod;\r\n        }\r\n\r\n        // bind all vm methods to itself\r\n        vm[methodName] = finalMethod.bind(vm);\r\n    }\r\n}","import * as React from 'react';\r\nimport { IResolver, MethodInvokeEvent } from '../types';\r\nimport { InternalProvider } from './internalContext';\r\nimport { VmResolver } from './vmResolver';\r\n\r\n//\r\n// Here we wrap the actual React context provider with our own Provider class so\r\n// that we could execute custom logic during 'render' calls.\r\n//\r\n\r\nexport interface ProviderProps {\r\n    resolver: IResolver;\r\n    onMethodInvokeStart?: (e: MethodInvokeEvent) => void;\r\n    onMethodInvokeEnd?: (e: MethodInvokeEvent) => void;\r\n}\r\n\r\nexport class Provider extends React.PureComponent<ProviderProps> {\r\n\r\n    private vmResolver: VmResolver;\r\n\r\n    public render() {\r\n\r\n        // init the resolver\r\n        this.setResolver();\r\n\r\n        // delegate rest of work to React's Provider\r\n        return (\r\n            <InternalProvider value={{ resolver: this.vmResolver }}>\r\n                {this.props.children}\r\n            </InternalProvider>\r\n        );\r\n    }\r\n\r\n    private setResolver() {\r\n\r\n        // can't set resolver\r\n        if (!this.props.resolver)\r\n            return;\r\n\r\n        // resolver already exists\r\n        if (this.vmResolver && this.vmResolver.internalResolver === this.props.resolver) {\r\n            return;\r\n        }\r\n\r\n        // create (or update) resolver\r\n        this.vmResolver = new VmResolver(this.props.resolver, this);\r\n        this.vmResolver.onMethodInvokeStart = this.props.onMethodInvokeStart;\r\n        this.vmResolver.onMethodInvokeEnd = this.props.onMethodInvokeEnd;\r\n    }\r\n}","import * as React from 'react';\r\nimport { ResolverKey } from '../types';\r\nimport { assignWithProperties } from '../utils';\r\nimport { InternalConsumer, InternalContext } from './internalContext';\r\nimport { VmContext } from './vmContext';\r\n\r\n// tslint:disable:variable-name\r\n\r\nexport const withViewModel = (VmClass: ResolverKey<any>) => (Component: React.ComponentType) => {\r\n\r\n    class ComponentWithViewModel extends React.PureComponent {\r\n\r\n        //\r\n        // properties\r\n        //\r\n\r\n        private vm: any;\r\n\r\n        //\r\n        // life cycle methods\r\n        //\r\n\r\n        public componentDidMount() {\r\n            this.activate();\r\n        }\r\n\r\n        public render() {\r\n            return (\r\n                <InternalConsumer>\r\n                    {context => {\r\n                        this.init(context);\r\n                        const componentProps = assignWithProperties({}, this.vm, this.props);\r\n                        return <Component {...componentProps} />;\r\n                    }}\r\n                </InternalConsumer>\r\n            );\r\n        }\r\n\r\n        public componentWillUnmount() {\r\n            this.deactivate();\r\n        }\r\n\r\n        //\r\n        // private methods\r\n        //\r\n\r\n        private init(context: InternalContext) {\r\n\r\n            // init only once\r\n            if (this.vm)\r\n                return;\r\n\r\n            if (!context)\r\n                throw new Error('Context not found. Make sure you use the Provider component.');\r\n            if (!context.resolver)\r\n                throw new Error('Resolver not found. Make sure you use the Provider component.');\r\n\r\n            // resolve vm instance\r\n            this.vm = context.resolver.get(VmClass);\r\n\r\n            // register for updates\r\n            const vmInfo = VmContext.getContext(this.vm);\r\n            if (!vmInfo)\r\n                throw new Error(`Class ${this.vm.constructor.name} is used as a view-model but no decorator was used.`);\r\n            vmInfo.registerView(this);\r\n        }\r\n\r\n        private activate() {\r\n            const vmContext = VmContext.getContext(this.vm);\r\n            this.invokeMethods(Object.keys(vmContext.activate || {}));\r\n        }\r\n\r\n        private deactivate() {\r\n\r\n            // remove registration\r\n            const vmContext = VmContext.getContext(this.vm);\r\n            vmContext.unregisterView(this);\r\n\r\n            // invoke deactivate life cycle method\r\n            this.invokeMethods(Object.keys(vmContext.deactivate || {}));\r\n        }\r\n\r\n        private invokeMethods(methodNames: string[]) {\r\n            for (const name of methodNames) {\r\n                const method = this.vm[name];\r\n                if (typeof method !== 'function')\r\n                    return;\r\n\r\n                method();\r\n            }\r\n        }\r\n    }\r\n\r\n    // set HOC display name\r\n    const originalDisplayName = Component.displayName || Component.name || 'Component';\r\n    (ComponentWithViewModel as React.ComponentType).displayName = `WithViewModel(${originalDisplayName})`;\r\n    return ComponentWithViewModel;\r\n};","// public\r\nexport * from './Provider';\r\nexport * from './withViewModel';\r\n\r\n// the rest is internal - don't expose it...\r\n","export * from './decorators';\nexport * from './core';\nexport * from './options';\nexport * from './types';\n","module.exports = require(\"react\");"],"sourceRoot":""}